<DiffuseLightBrightness>
<uniform name="Brightness" type="float" value="0.3" min="0.0" max="1.0"/>
<uniform name="Contrast" type="float" value="1.8" min="0.5" max="4.0"/>
<uniform name="diffuseMap" type="sampler2D" value="0"/>
<uniform name="lightMap" type="sampler2D" value="1"/>
<vertexProgram>
  
    varying vec2 Texcoord;
    varying vec2 TexcoordL;
  
     
    void main( void )
    {
        Texcoord = gl_MultiTexCoord0;
        TexcoordL = gl_MultiTexCoord1;
	    gl_Position = ftransform();	
#ifdef __GLSL_CG_DATA_TYPES
gl_ClipVertex = gl_ModelViewMatrix*gl_Vertex;
#endif      
    }
  </vertexProgram><fragmentProgram>
   
    varying vec2 Texcoord;
    varying vec2 TexcoordL;
   
    uniform float Brightness;
    uniform float Contrast;
    uniform sampler2D diffuseMap;
    uniform sampler2D lightMap;
   
    void main( void )
    {
      vec4 DiffuseColor = texture2D( diffuseMap, Texcoord ) * texture2D( lightMap, TexcoordL );
      DiffuseColor.rgb  =((DiffuseColor.rgb - 0.5f) * Contrast) + 0.5f;
      DiffuseColor.rgb += vec3(Brightness,Brightness,Brightness);
      gl_FragColor = DiffuseColor ;	
    }</fragmentProgram>
    
    </DiffuseLightBrightness>

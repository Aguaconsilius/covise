MACRO(USE_CEF)
  IF (NOT CEF_ROOT)
    SET(CEF_ROOT $ENV{EXTERNLIBS}/cef)
    file(TO_CMAKE_PATH "$ENV{EXTERNLIBS}/cef" CEF_ROOT)
  ENDIF()
  if(APPLE)
    if(CMAKE_SYSTEM_PROCESSOR STREQUAL "arm64")
      set(PROJECT_ARCH arm64)
    endif()
  endif()
  COVISE_FIND_PACKAGE(CEF)
  if(CEF_ROOT AND IS_DIRECTORY "${CEF_ROOT}")
     set(CEF_FOUND TRUE)
  endif()
  IF ((NOT CEF_FOUND)  AND (${ARGC} LESS 1))
    USING_MESSAGE("Skipping because of missing CEF")
    RETURN()
  ENDIF((NOT CEF_FOUND) AND (${ARGC} LESS 1))
  IF(NOT CEF_USED AND CEF_FOUND)
    SET(CEF_USED TRUE)
	
    INCLUDE_DIRECTORIES(SYSTEM ${CEF_INCLUDE_PATH})
    IF(WIN32)
	SET(CEF_LIBRARIES optimized ${CEF_LIB_RELEASE} debug ${CEF_LIB_DEBUG} optimized ${CEF_ROOT}/lib/libcef_dll_wrapper.lib debug ${CEF_ROOT}/lib/libcef_dll_wrapperd.lib)
    ELSE()
	SET(CEF_LIBRARIES optimized ${CEF_LIB_RELEASE} debug ${CEF_LIB_DEBUG} optimized ${CEF_ROOT}/lib/libcef_dll_wrapper.a debug ${CEF_ROOT}/lib/libcef_dll_wrapperd.a)
    ENDIF()
    SET(EXTRA_LIBS ${EXTRA_LIBS} ${CEF_LIBRARIES})
  ENDIF()
ENDMACRO(USE_CEF)

